<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docbook on Paul Cutler</title>
    <link>https://paulcutler.org/tags/docbook/</link>
    <description>Recent content in docbook on Paul Cutler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Paul Cutler</copyright>
    <lastBuildDate>Tue, 11 May 2010 01:59:11 +0000</lastBuildDate><atom:link href="https://paulcutler.org/tags/docbook/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Quack – An update on GNOME 3.0 Help</title>
      <link>https://paulcutler.org/blog/2010/05/quack-an-update-on-gnome-3-0-help/</link>
      <pubDate>Tue, 11 May 2010 01:59:11 +0000</pubDate>
      
      <guid>https://paulcutler.org/blog/2010/05/quack-an-update-on-gnome-3-0-help/</guid>
      <description>One of the big improvements for GNOME 3.0 is new user help. The Documentation Team is using Mallard to re-write the GNOME User Guide and a number of applications help files as well.
In GNOME today, most help files are written in a very linear structure by chapter using Docbook XML. If you’re a user looking for help, it’s not always easy to find the right chapter that contains the topic you’re looking for help with.</description>
    </item>
    
    <item>
      <title>Writing GNOME Docs, Part III (Let&#39;s write some code!)</title>
      <link>https://paulcutler.org/blog/2009/03/write-gnome-docs-part-iii-lets-write-some-code/</link>
      <pubDate>Sat, 28 Mar 2009 01:44:34 +0000</pubDate>
      
      <guid>https://paulcutler.org/blog/2009/03/write-gnome-docs-part-iii-lets-write-some-code/</guid>
      <description>I’ve been chronicling my learning on writing documentation for GNOME. In Part I, I covered getting up to speed on GNOME documentation and the tools available; and in Part II I wrote about picking a project that you want to help, getting involved, and setting up your environment and finding updates that need to be made.
Now it’s time to apply those needed updates to the documentation and write some actual code in Docbook.</description>
    </item>
    
    <item>
      <title>Writing GNOME Docs, Part II</title>
      <link>https://paulcutler.org/blog/2009/03/writing-gnome-docs-part-ii/</link>
      <pubDate>Thu, 26 Mar 2009 18:03:39 +0000</pubDate>
      
      <guid>https://paulcutler.org/blog/2009/03/writing-gnome-docs-part-ii/</guid>
      <description>So you’ve decided you want to contribute to GNOME and write some documentation. In Part I, I wrote about the steps I went through to prepare to write GNOME documentation and picking a project.
In Part II, we will take a look at the final preparation stage, including checking out the project’s source code via GNOME Subversion and finding documentation that needs updating. I am still fairly new to the process myself, but these are some of the steps I take in writing documentation.</description>
    </item>
    
    <item>
      <title>Writing GNOME Docs, Part I</title>
      <link>https://paulcutler.org/blog/2009/03/writing-gnome-docs-part-i/</link>
      <pubDate>Wed, 25 Mar 2009 14:22:06 +0000</pubDate>
      
      <guid>https://paulcutler.org/blog/2009/03/writing-gnome-docs-part-i/</guid>
      <description>It’s been just over a year since I submitted my first patch to GNOME, for updated Tomboy documentation.
In that time, Shaun McCance of the GNOME Documentation team has been doing a lot of work to make it easier to get involved with the GNOME docs team.
Though Shaun is trying to make it easier to see which projects might need help with documentation updates, it’s still kind of overwhelming to try and figure out where to get started, especially as some of the information on the GNOME Docs team is outdated.</description>
    </item>
    
  </channel>
</rss>
